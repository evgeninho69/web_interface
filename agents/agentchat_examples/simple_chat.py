#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AutoGen AgentChat (–Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)
"""

import asyncio
from autogen_agentchat.agents import AssistantAgent, UserProxyAgent
from autogen_ext.models.openai import OpenAIChatCompletionClient
import os

async def main():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    api_key = os.environ.get("OPENAI_API_KEY")
    if not api_key:
        print("‚ùå –û—à–∏–±–∫–∞: OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print("   export OPENAI_API_KEY='–≤–∞—à_–∫–ª—é—á_–∑–¥–µ—Å—å'")
        return

    print("üîë API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞...")

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç OpenAI
    model_client = OpenAIChatCompletionClient(
        model="gpt-4",
        api_key=api_key
    )

    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    assistant = AssistantAgent(
        name="assistant",
        model_client=model_client,
        system_message="–í—ã - –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∏—Ö –∑–∞–¥–∞—á–∞–º–∏."
    )

    print("ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–ª–æ–≥...")
    print("üí¨ –ó–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É...")
    print("-" * 50)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –∑–∞–¥–∞—á–µ–π
    result = await assistant.run(
        task="–ü—Ä–∏–≤–µ—Ç! –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö AutoGen AgentChat."
    )
    
    print("üìù –û—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:")
    print(result.messages[-1].content if result.messages else "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞")

if __name__ == "__main__":
    asyncio.run(main())
