#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AutoGen AgentChat
"""

import autogen
from autogen import AssistantAgent, UserProxyAgent, config_list_from_json

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º OpenAI API –∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
import os

def main():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    api_key = os.environ.get("OPENAI_API_KEY")
    if not api_key:
        print("‚ùå –û—à–∏–±–∫–∞: OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print("   export OPENAI_API_KEY='–≤–∞—à_–∫–ª—é—á_–∑–¥–µ—Å—å'")
        return

    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è OpenAI
    config_list = [
        {
            "model": "gpt-4",
            "api_key": api_key,
        }
    ]

    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    assistant = AssistantAgent(
        name="assistant",
        system_message="–í—ã - –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∏—Ö –∑–∞–¥–∞—á–∞–º–∏.",
        llm_config={"config_list": config_list}
    )

    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_proxy = UserProxyAgent(
        name="user_proxy",
        human_input_mode="ALWAYS",
        max_consecutive_auto_reply=10,
        is_termination_msg=lambda x: x.get("content", "").rstrip().endswith("TERMINATE"),
        code_execution_config={"work_dir": "workspace"},
        llm_config={"config_list": config_list}
    )

    # –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–ª–æ–≥
    user_proxy.initiate_chat(
        assistant,
        message="–ü—Ä–∏–≤–µ—Ç! –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö AutoGen AgentChat."
    )

if __name__ == "__main__":
    main()
