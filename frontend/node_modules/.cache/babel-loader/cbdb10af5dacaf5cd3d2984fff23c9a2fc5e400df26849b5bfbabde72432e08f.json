{"ast":null,"code":"var _jsxFileName = \"/Users/evgeniyzotkin/Documents/Programms/web_interface/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth должен использоваться внутри AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Проверяем токен при загрузке приложения\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Здесь можно добавить проверку токена на сервере\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        setUser(JSON.parse(userData));\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          token,\n          ...userData\n        } = response.data.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(userData));\n        setUser(userData);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: response.data.error\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Ошибка при входе'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post('/api/auth/register', userData);\n      if (response.data.success) {\n        const {\n          token,\n          ...userInfo\n        } = response.data.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(userInfo));\n        setUser(userInfo);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: response.data.error\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Ошибка при регистрации'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","login","email","password","response","post","data","success","setItem","stringify","error","_error$response","_error$response$data","register","userInfo","_error$response2","_error$response2$data","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/evgeniyzotkin/Documents/Programms/web_interface/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth должен использоваться внутри AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Проверяем токен при загрузке приложения\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Здесь можно добавить проверку токена на сервере\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        setUser(JSON.parse(userData));\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n\n      if (response.data.success) {\n        const { token, ...userData } = response.data.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(userData));\n        setUser(userData);\n        return { success: true };\n      } else {\n        return { success: false, error: response.data.error };\n      }\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.error || 'Ошибка при входе' \n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await axios.post('/api/auth/register', userData);\n\n      if (response.data.success) {\n        const { token, ...userInfo } = response.data.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(userInfo));\n        setUser(userInfo);\n        return { success: true };\n      } else {\n        return { success: false, error: response.data.error };\n      }\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.error || 'Ошибка при регистрации' \n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}